{
  "version": 4,
  "terraform_version": "1.13.1",
  "serial": 4,
  "lineage": "0ff28e8f-3c64-776b-9110-b5ee7523ec05",
  "outputs": {
    "chart_version": {
      "value": "0.31.0",
      "type": "string"
    },
    "ingress_host": {
      "value": "vault.local",
      "type": "string"
    },
    "ingress_url": {
      "value": "http://vault.local",
      "type": "string"
    },
    "init_command": {
      "value": "kubectl exec -n vault vault-0 -- vault operator init -key-shares=5 -key-threshold=3 -format=json",
      "type": "string"
    },
    "namespace": {
      "value": "vault",
      "type": "string"
    },
    "port_forward_command": {
      "value": "kubectl port-forward -n vault svc/vault 8200:8200",
      "type": "string"
    },
    "raft_peers_command": {
      "value": "kubectl exec -n vault vault-0 -- vault operator raft list-peers",
      "type": "string"
    },
    "release_metadata": {
      "value": {
        "app_version": "1.20.4",
        "chart": "vault",
        "first_deployed": 1760742421,
        "last_deployed": 1760742421,
        "name": "vault",
        "namespace": "vault",
        "notes": "\nThank you for installing HashiCorp Vault!\n\nNow that you have deployed Vault, you should look over the docs on using\nVault with Kubernetes available here:\n\nhttps://developer.hashicorp.com/vault/docs\n\n\nYour release is named vault. To learn more about the release, try:\n\n  $ helm status vault\n  $ helm get manifest vault\n\n",
        "revision": 1,
        "values": "{\"global\":{\"enabled\":true,\"tlsDisable\":true},\"injector\":{\"agentImage\":{\"repository\":\"hashicorp/vault\",\"tag\":\"1.20.4\"},\"enabled\":true,\"image\":{\"repository\":\"hashicorp/vault-k8s\",\"tag\":\"1.7.0\"}},\"server\":{\"affinity\":\"\\\"podAntiAffinity\\\":\\n  \\\"requiredDuringSchedulingIgnoredDuringExecution\\\":\\n  - \\\"labelSelector\\\":\\n      \\\"matchLabels\\\":\\n        \\\"app.kubernetes.io/instance\\\": \\\"vault\\\"\\n        \\\"app.kubernetes.io/name\\\": \\\"vault\\\"\\n        \\\"component\\\": \\\"server\\\"\\n    \\\"topologyKey\\\": \\\"kubernetes.io/hostname\\\"\\n\",\"annotations\":{},\"auditStorage\":{\"accessMode\":\"ReadWriteOnce\",\"enabled\":false,\"size\":\"10Gi\",\"storageClass\":null},\"authDelegator\":{\"enabled\":true},\"dataStorage\":{\"accessMode\":\"ReadWriteOnce\",\"enabled\":true,\"size\":\"10Gi\",\"storageClass\":null},\"extraLabels\":{\"environment\":\"production\",\"managed-by\":\"terraform\"},\"ha\":{\"disruptionBudget\":{\"enabled\":true,\"maxUnavailable\":1},\"enabled\":true,\"raft\":{\"config\":\"ui = true\\n\\nlistener \\\"tcp\\\" {\\n  address     = \\\"[::]:8200\\\"\\n  cluster_address = \\\"[::]:8201\\\"\\n  tls_disable = \\\"1\\\"\\n}\\n\\nstorage \\\"raft\\\" {\\n  path = \\\"/vault/data\\\"\\n\\n                retry_join {\\n    leader_api_addr = \\\"http://vault-0.vault-internal:8200\\\"\\n  }\\n                retry_join {\\n    leader_api_addr = \\\"http://vault-1.vault-internal:8200\\\"\\n  }\\n                retry_join {\\n    leader_api_addr = \\\"http://vault-2.vault-internal:8200\\\"\\n  }\\n  \\n  autopilot {\\n    cleanup_dead_servers      = true\\n    last_contact_threshold    = \\\"10s\\\"\\n    max_trailing_logs         = 1000\\n    server_stabilization_time = \\\"10s\\\"\\n    min_quorum                = 2\\n    disable_upgrade_migration = false\\n  }\\n}\\n\\nservice_registration \\\"kubernetes\\\" {}\\n\\nlog_level  = \\\"info\\\"\\nlog_format = \\\"json\\\"\\n\",\"enabled\":true,\"setNodeId\":true},\"replicas\":3},\"image\":{\"repository\":\"hashicorp/vault\",\"tag\":\"1.20.4\"},\"logFormat\":\"json\",\"logLevel\":\"info\",\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"256Mi\"}},\"service\":{\"active\":{\"enabled\":true},\"enabled\":true,\"standby\":{\"enabled\":true}},\"serviceAccount\":{\"create\":true,\"name\":\"vault-sa\",\"serviceDiscovery\":{\"enabled\":true}},\"standalone\":{\"config\":\"ui = true\\n\\nlistener \\\"tcp\\\" {\\n  address     = \\\"[::]:8200\\\"\\n  cluster_address = \\\"[::]:8201\\\"\\n  tls_disable = \\\"1\\\"\\n}\\n\\nstorage \\\"file\\\" {\\n  path = \\\"/vault/data\\\"\\n}\\n\\nlog_level  = \\\"info\\\"\\nlog_format = \\\"json\\\"\\n\",\"enabled\":false}},\"serverTelemetry\":{\"serviceMonitor\":{\"enabled\":false}},\"ui\":{\"enabled\":true,\"externalPort\":8200,\"publishNotReadyAddresses\":true,\"serviceType\":\"ClusterIP\"}}",
        "version": "0.31.0"
      },
      "type": [
        "object",
        {
          "app_version": "string",
          "chart": "string",
          "first_deployed": "number",
          "last_deployed": "number",
          "name": "string",
          "namespace": "string",
          "notes": "string",
          "revision": "number",
          "values": "string",
          "version": "string"
        }
      ],
      "sensitive": true
    },
    "release_name": {
      "value": "vault",
      "type": "string"
    },
    "release_status": {
      "value": "deployed",
      "type": "string"
    },
    "replicas": {
      "value": 3,
      "type": "number"
    },
    "status_command": {
      "value": "kubectl exec -n vault vault-0 -- vault status",
      "type": "string"
    },
    "unseal_command_example": {
      "value": "kubectl exec -n vault vault-0 -- vault operator unseal \u003cunseal-key\u003e",
      "type": "string"
    },
    "vault_active_service_name": {
      "value": "vault-active",
      "type": "string"
    },
    "vault_addr": {
      "value": "http://vault.vault.svc.cluster.local:8200",
      "type": "string"
    },
    "vault_cluster_port": {
      "value": 8201,
      "type": "number"
    },
    "vault_port": {
      "value": 8200,
      "type": "number"
    },
    "vault_service_fqdn": {
      "value": "vault.vault.svc.cluster.local",
      "type": "string"
    },
    "vault_service_name": {
      "value": "vault",
      "type": "string"
    },
    "vault_standby_service_name": {
      "value": "vault-standby",
      "type": "string"
    },
    "vault_ui_service_name": {
      "value": "vault-ui",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "vault",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "vault",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "1.20.4",
              "chart": "vault",
              "first_deployed": 1760742421,
              "last_deployed": 1760742421,
              "name": "vault",
              "namespace": "vault",
              "notes": "\nThank you for installing HashiCorp Vault!\n\nNow that you have deployed Vault, you should look over the docs on using\nVault with Kubernetes available here:\n\nhttps://developer.hashicorp.com/vault/docs\n\n\nYour release is named vault. To learn more about the release, try:\n\n  $ helm status vault\n  $ helm get manifest vault\n\n",
              "revision": 1,
              "values": "{\"global\":{\"enabled\":true,\"tlsDisable\":true},\"injector\":{\"agentImage\":{\"repository\":\"hashicorp/vault\",\"tag\":\"1.20.4\"},\"enabled\":true,\"image\":{\"repository\":\"hashicorp/vault-k8s\",\"tag\":\"1.7.0\"}},\"server\":{\"affinity\":\"\\\"podAntiAffinity\\\":\\n  \\\"requiredDuringSchedulingIgnoredDuringExecution\\\":\\n  - \\\"labelSelector\\\":\\n      \\\"matchLabels\\\":\\n        \\\"app.kubernetes.io/instance\\\": \\\"vault\\\"\\n        \\\"app.kubernetes.io/name\\\": \\\"vault\\\"\\n        \\\"component\\\": \\\"server\\\"\\n    \\\"topologyKey\\\": \\\"kubernetes.io/hostname\\\"\\n\",\"annotations\":{},\"auditStorage\":{\"accessMode\":\"ReadWriteOnce\",\"enabled\":false,\"size\":\"10Gi\",\"storageClass\":null},\"authDelegator\":{\"enabled\":true},\"dataStorage\":{\"accessMode\":\"ReadWriteOnce\",\"enabled\":true,\"size\":\"10Gi\",\"storageClass\":null},\"extraLabels\":{\"environment\":\"production\",\"managed-by\":\"terraform\"},\"ha\":{\"disruptionBudget\":{\"enabled\":true,\"maxUnavailable\":1},\"enabled\":true,\"raft\":{\"config\":\"ui = true\\n\\nlistener \\\"tcp\\\" {\\n  address     = \\\"[::]:8200\\\"\\n  cluster_address = \\\"[::]:8201\\\"\\n  tls_disable = \\\"1\\\"\\n}\\n\\nstorage \\\"raft\\\" {\\n  path = \\\"/vault/data\\\"\\n\\n                retry_join {\\n    leader_api_addr = \\\"http://vault-0.vault-internal:8200\\\"\\n  }\\n                retry_join {\\n    leader_api_addr = \\\"http://vault-1.vault-internal:8200\\\"\\n  }\\n                retry_join {\\n    leader_api_addr = \\\"http://vault-2.vault-internal:8200\\\"\\n  }\\n  \\n  autopilot {\\n    cleanup_dead_servers      = true\\n    last_contact_threshold    = \\\"10s\\\"\\n    max_trailing_logs         = 1000\\n    server_stabilization_time = \\\"10s\\\"\\n    min_quorum                = 2\\n    disable_upgrade_migration = false\\n  }\\n}\\n\\nservice_registration \\\"kubernetes\\\" {}\\n\\nlog_level  = \\\"info\\\"\\nlog_format = \\\"json\\\"\\n\",\"enabled\":true,\"setNodeId\":true},\"replicas\":3},\"image\":{\"repository\":\"hashicorp/vault\",\"tag\":\"1.20.4\"},\"logFormat\":\"json\",\"logLevel\":\"info\",\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"256Mi\"}},\"service\":{\"active\":{\"enabled\":true},\"enabled\":true,\"standby\":{\"enabled\":true}},\"serviceAccount\":{\"create\":true,\"name\":\"vault-sa\",\"serviceDiscovery\":{\"enabled\":true}},\"standalone\":{\"config\":\"ui = true\\n\\nlistener \\\"tcp\\\" {\\n  address     = \\\"[::]:8200\\\"\\n  cluster_address = \\\"[::]:8201\\\"\\n  tls_disable = \\\"1\\\"\\n}\\n\\nstorage \\\"file\\\" {\\n  path = \\\"/vault/data\\\"\\n}\\n\\nlog_level  = \\\"info\\\"\\nlog_format = \\\"json\\\"\\n\",\"enabled\":false}},\"serverTelemetry\":{\"serviceMonitor\":{\"enabled\":false}},\"ui\":{\"enabled\":true,\"externalPort\":8200,\"publishNotReadyAddresses\":true,\"serviceType\":\"ClusterIP\"}}",
              "version": "0.31.0"
            },
            "name": "vault",
            "namespace": "vault",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://helm.releases.hashicorp.com",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 600,
            "values": [
              "\"global\":\n  \"enabled\": true\n  \"tlsDisable\": true\n\"injector\":\n  \"agentImage\":\n    \"repository\": \"hashicorp/vault\"\n    \"tag\": \"1.20.4\"\n  \"enabled\": true\n  \"image\":\n    \"repository\": \"hashicorp/vault-k8s\"\n    \"tag\": \"1.7.0\"\n\"server\":\n  \"affinity\": |\n    \"podAntiAffinity\":\n      \"requiredDuringSchedulingIgnoredDuringExecution\":\n      - \"labelSelector\":\n          \"matchLabels\":\n            \"app.kubernetes.io/instance\": \"vault\"\n            \"app.kubernetes.io/name\": \"vault\"\n            \"component\": \"server\"\n        \"topologyKey\": \"kubernetes.io/hostname\"\n  \"annotations\": {}\n  \"auditStorage\":\n    \"accessMode\": \"ReadWriteOnce\"\n    \"enabled\": false\n    \"size\": \"10Gi\"\n    \"storageClass\": null\n  \"authDelegator\":\n    \"enabled\": true\n  \"dataStorage\":\n    \"accessMode\": \"ReadWriteOnce\"\n    \"enabled\": true\n    \"size\": \"10Gi\"\n    \"storageClass\": null\n  \"extraLabels\":\n    \"environment\": \"production\"\n    \"managed-by\": \"terraform\"\n  \"ha\":\n    \"disruptionBudget\":\n      \"enabled\": true\n      \"maxUnavailable\": 1\n    \"enabled\": true\n    \"raft\":\n      \"config\": \"ui = true\\n\\nlistener \\\"tcp\\\" {\\n  address     = \\\"[::]:8200\\\"\\n\n        \\ cluster_address = \\\"[::]:8201\\\"\\n  tls_disable = \\\"1\\\"\\n}\\n\\nstorage \\\"raft\\\"\n        {\\n  path = \\\"/vault/data\\\"\\n\\n                retry_join {\\n    leader_api_addr\n        = \\\"http://vault-0.vault-internal:8200\\\"\\n  }\\n                retry_join\n        {\\n    leader_api_addr = \\\"http://vault-1.vault-internal:8200\\\"\\n  }\\n                retry_join\n        {\\n    leader_api_addr = \\\"http://vault-2.vault-internal:8200\\\"\\n  }\\n  \\n\n        \\ autopilot {\\n    cleanup_dead_servers      = true\\n    last_contact_threshold\n        \\   = \\\"10s\\\"\\n    max_trailing_logs         = 1000\\n    server_stabilization_time\n        = \\\"10s\\\"\\n    min_quorum                = 2\\n    disable_upgrade_migration\n        = false\\n  }\\n}\\n\\nservice_registration \\\"kubernetes\\\" {}\\n\\nlog_level  =\n        \\\"info\\\"\\nlog_format = \\\"json\\\"\\n\"\n      \"enabled\": true\n      \"setNodeId\": true\n    \"replicas\": 3\n  \"image\":\n    \"repository\": \"hashicorp/vault\"\n    \"tag\": \"1.20.4\"\n  \"logFormat\": \"json\"\n  \"logLevel\": \"info\"\n  \"resources\":\n    \"limits\":\n      \"cpu\": \"500m\"\n      \"memory\": \"512Mi\"\n    \"requests\":\n      \"cpu\": \"250m\"\n      \"memory\": \"256Mi\"\n  \"service\":\n    \"active\":\n      \"enabled\": true\n    \"enabled\": true\n    \"standby\":\n      \"enabled\": true\n  \"serviceAccount\":\n    \"create\": true\n    \"name\": \"vault-sa\"\n    \"serviceDiscovery\":\n      \"enabled\": true\n  \"standalone\":\n    \"config\": |\n      ui = true\n\n      listener \"tcp\" {\n        address     = \"[::]:8200\"\n        cluster_address = \"[::]:8201\"\n        tls_disable = \"1\"\n      }\n\n      storage \"file\" {\n        path = \"/vault/data\"\n      }\n\n      log_level  = \"info\"\n      log_format = \"json\"\n    \"enabled\": false\n\"serverTelemetry\":\n  \"serviceMonitor\":\n    \"enabled\": false\n\"ui\":\n  \"enabled\": true\n  \"externalPort\": 8200\n  \"publishNotReadyAddresses\": true\n  \"serviceType\": \"ClusterIP\"\n"
            ],
            "verify": false,
            "version": "0.31.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "vault",
            "release_name": "vault"
          },
          "dependencies": [
            "kubernetes_namespace.vault"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_ingress_v1",
      "name": "vault_ui",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "vault/vault-ui",
            "metadata": [
              {
                "annotations": {
                  "kubernetes.io/ingress.class": "nginx"
                },
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app.kubernetes.io/component": "ui",
                  "app.kubernetes.io/name": "vault",
                  "environment": "production",
                  "managed-by": "terraform"
                },
                "name": "vault-ui",
                "namespace": "vault",
                "resource_version": "4605",
                "uid": "27255b09-be10-4f6b-a7ed-eb52dbc46c50"
              }
            ],
            "spec": [
              {
                "default_backend": [],
                "ingress_class_name": "nginx",
                "rule": [
                  {
                    "host": "vault.local",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "vault-ui",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 8200
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/",
                            "path_type": "Prefix"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": []
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "networking.k8s.io/v1",
            "kind": "Ingress",
            "name": "vault-ui",
            "namespace": "vault"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "helm_release.vault",
            "kubernetes_namespace.vault"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "vault",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "server",
                  "app.kubernetes.io/name": "vault",
                  "environment": "production",
                  "managed-by": "terraform",
                  "name": "vault"
                },
                "name": "vault",
                "resource_version": "4432",
                "uid": "4ecd8704-564e-4334-afbf-f8ed0535f50a"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Namespace",
            "name": "vault"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "var",
      "config_addr": "var.log_format",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.log_format",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.replicas",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.replicas",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.log_level",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.log_level",
          "status": "pass"
        }
      ]
    }
  ]
}
